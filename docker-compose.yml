version: "3"

services:
  security:
    build:
      context: dockerfile
      dockerfile: dockerfile.security
    restart: always
    environment:
      JWT_SECRET: ${JWT_SECRET:?JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER:?JWT_ISSUER}
      JWT_EXPIRE_IN_MINUTES: ${JWT_EXPIRE_IN_MINUTES:?JWT_EXPIRE_IN_MINUTES}
      APP_HOST: ${SECURITY_APP_HOST:?SECURITY_APP_HOST}
      APP_PORT: ${SECURITY_APP_PORT:?SECURITY_APP_PORT}
      COOKIE_SECURE: ${SECURITY_COOKIE_SECURE:?SECURITY_COOKIE_SECURE}
      GRAPHIQL_IS_ENABLE: ${SECURITY_GRAPHIQL_ENABLE:?SECURITY_GRAPHIQL_ENABLE}
      LOG_LEVEL: ${SECURITY_LOG_LEVEL:?SECURITY_LOG_LEVEL}
      MONGO_CONNECTION_STRING: ${SECURITY_MONGO_CONNECTION_STRING:?SECURITY_MONGO_CONNECTION_STRING}
      REFRESH_TOKEN_EXPIRE_IN_MINUTES: ${SECURITY_REFRESH_TOKEN_EXPIRE_IN_MINUTES:?SECURITY_REFRESH_TOKEN_EXPIRE_IN_MINUTES}
    ports:
      - "5000:5000"
    volumes:
      - ./log:/workspace/log
    depends_on:
      - mongo

  bot:
    build:
      context: dockerfile
      dockerfile: dockerfile.bot
    restart: always
    environment:
      APP_PORT: 5001
      APP_HOST: 0.0.0.0
      LOG_LEVEL: info
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN?:TELEGRAM_TOKEN}
      MONGO_HOST: ${MONGO_HOST:?MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT:?MONGO_PORT}
      MONGO_USERNAME: ${MONGO_USERNAME:?MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD:?MONGO_PASSWORD}
      MONGO_AUTH_SOURCE: ${MONGO_AUTH_SOURCE:?MONGO_AUTH_SOURCE}
    ports:
      - "5001:5001"
    volumes:
      - ./log:/workspace/log

  budget:
    build:
      context: dockerfile
      dockerfile: dockerfile.budget
    restart: always
    environment:
      APP_PORT: 5002
      APP_HOST: 0.0.0.0
      LOG_LEVEL: info
      GRAPHIQL_ENABLE: "false"
      MONGO_HOST: ${MONGO_HOST:?MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT:?MONGO_PORT}
      MONGO_USERNAME: ${MONGO_USERNAME:?MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD:?MONGO_PASSWORD}
      MONGO_AUTH_SOURCE: ${MONGO_AUTH_SOURCE:?MONGO_AUTH_SOURCE}
      JWT_SECRET: ${JWT_SECRET:?JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER:?JWT_ISSUER}
      JWT_EXPIRE_IN_MINUTES: ${JWT_EXPIRE_IN_MINUTES:?JWT_EXPIRE_IN_MINUTES}
    ports:
      - "5002:5002"
    volumes:
      - ./log:/workspace/log

  nginx:
    image: nginx:1.19.2-alpine
    restart: always
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - security

  certbot:
    image: certbot/certbot
    restart: always
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx

  mongo:
    image: mongo:4.2.8
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:?MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:?MONGO_PASSWORD}
    volumes:
      - ./mongodump:/mongodump
      - mongodata:/data/db

  mongo-express:
    image: mongo-express:0.54.0
    restart: always
    ports:
      - "10000:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME:?MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD:?MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${MONGO_HOST:?MONGO_HOST}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT:?MONGO_PORT}
    depends_on:
      - mongo

volumes:
  mongodata:
